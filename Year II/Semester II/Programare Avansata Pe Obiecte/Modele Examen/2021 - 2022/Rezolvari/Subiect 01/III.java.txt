import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.lang.Runnable;
import java.lang.Thread;

class Counter {
    private long count;
    Counter() { count = 0; }
    public long getCount() { return count; }
    synchronized public void add() { count++; }
}

class Fir implements Runnable {
    private final Scanner scanner;
    private final double smin;
    private final int cmin;
    private final Counter counter;

    Fir(String filePath, double smin, int cmin, Counter counter) throws Exception {
        this.scanner = new Scanner(new File(filePath));
        this.smin = smin;
        this.cmin = cmin;
        this.counter = counter;
    }

    @Override
    public void run() {
        while (scanner.hasNextLine()) {
            String[] detaliiImobil = scanner.nextLine().split(",");
            double nrCamere = Double.parseDouble(detaliiImobil[2]);
            int suprafata = Integer.parseInt(detaliiImobil[3]);
            if (suprafata > smin && nrCamere >= cmin) {
                counter.add();
            }
        }
    }
}

public class III {
    private final static String filePath1 = "txt/agentieRentSale_1.txt";
    private final static String filePath2 = "txt/agentieRentSale_2.txt";
    private final static Scanner scanner = new Scanner(System.in);
    private static Counter counter = new Counter();

    public static void main(String[] args) {
        try {
            double smin = Double.parseDouble(scanner.nextLine());
            int cmin = Integer.parseInt(scanner.nextLine());

            Thread t1 = new Thread(new Fir(filePath1, smin, cmin, counter));
            Thread t2 = new Thread(new Fir(filePath2, smin, cmin, counter));

            t1.start();
            t2.start();

            t1.join();
            t2.join();

            System.out.println(counter.getCount());
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}