# -*- coding: utf-8 -*-
"""LabPA_2_Sg2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l5rDgK5P_ufysDAoA0t-WlGQhDc8V1ti

Problema 1
"""

prop = input()
sir1 = input()
sir2 = input()

prop1 = prop.replace(sir1, sir2)
print(prop1)

"""Problema 2 (varianta pentru propotizii care sunt gramatical corecte si cele gramatical incorecte e.g. "aNa,aRE;   MEre" -> "ANa,ARE;   MEre")"""

p=input("prop: ")
s=""
if p[0].isalpha():
    s+=p[0].upper()
else:
    s+=p[0]
for i in range(len(p)-1):
    if not p[i].isalpha() and p[i+1].isalpha():
        s+=p[i+1].upper()
    else:
        s+=p[i+1]
print (s)
p=p.title()
print(p)

"""Problema 3"""

# Problema 3

propozitie = input("Propozitie:\n")
sir1 = input("Sir 1:\n")
sir2 = input("Sir 2:\n")

propozitie_modificata = " " + propozitie + " "
lista = propozitie_modificata.find(sir1)

propozitie_finala = ""
poz1 = 0
poz2 = 0
aux = []

while propozitie_modificata.find(sir1, poz2) != -1:
    i = propozitie_modificata.find(sir1, poz2)
    if not propozitie_modificata[i - 1].isalpha() and not propozitie_modificata[i + len(sir1)].isalpha():
        propozitie_finala = propozitie_finala + propozitie_modificata[poz1:i] + sir2
        poz1 = i + len(sir1)
        poz2 = poz1
    else:
      poz2 = i + 1

propozitie_finala += propozitie_modificata[poz1:]

final = propozitie_finala[1:-1]
print(final)

"""Problema 4"""

sir1 = input("Primul cuvant este:")
sir2 = input("Al doilea cuvant este:")

for i in range(len(sir1)):
    idx = sir2.find(sir1[i])
    if idx == -1:
        print("Nu sunt anagrame")
        break
    sir2 = sir2[:idx]+sir2[idx+1:]
else:
    if sir2 == "":
        print("Sunt anagrame")
    else:
        print("Nu sunt anagrame")

















