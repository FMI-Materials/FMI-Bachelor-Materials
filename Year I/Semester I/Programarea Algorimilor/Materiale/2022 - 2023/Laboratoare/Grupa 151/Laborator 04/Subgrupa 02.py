# -*- coding: utf-8 -*-
"""LabPA_4_Sg2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BZ5HEj5dA2UVAQAsAWsuDJz08dBToJ49

Exercitiul 1
"""

# Exerciitul 1

with open("test.in") as f:
    ecuatii=f.readlines()
    g=open("test.out","w")
    nota=1
    for linie in ecuatii:
        linie=linie.rstrip()
        L=linie.split("*")
        L[1]=L[1].split("=")
        # print(f"{L[0]}*{L[1][0]}={L[1][1]}",file=g,end=" ")
        g.write(f"{L[0]}*{L[1][0]}={L[1][1]}")
        if int(L[0])*int(L[1][0])==int(L[1][1]):
            nota=nota+1
            # print("Corect",file=g)
            g.write(" Corect\n")
        else:
            # print(f"Gresit {int(L[0])*int(L[1][0])}",file=g)
            g.write(f" Gresit {int(L[0])*int(L[1][0])}\n")
    # print(f"Nota {nota}",file=g)
    g.write(f"Nota {nota}")
    g.close()

"""Exercitiul 2"""

# Exercitiul 2

def pct_2a():
    L=[]
    i=1
    x=input( )
    while(x!="-1"):
        x=x.split(" ",1)
        L.append(tuple([int(x[0]),x[1],i]))
        i+=1
        x=input()
    return L

def pct_2b(L):
    m=set()
    for element in L:
        m.add(element[0])
    return m

def pct_2c(L):
    d={}
    L.sort(key=lambda x: x[0], reverse=True)
    for info in L:
        if info[0] not in d:
            d[info[0]]=[]
        d[info[0]].append((info[1],info[2]))
    for i in d:
        d[i].sort(key=lambda x: x[1])
    
    return d

L=pct_2a()
print(L)
print(pct_2b(L))
print(pct_2c(L))

"""Exercitiul 3"""

from math import sqrt

def prime():
    yield 2
    p=3
    while True:
        for i in range(2, int(sqrt(p)) + 1):
            if p % i == 0:
                p+=2
                break
        else:
            yield p
            p+=2

for i in prime():
    if i<100:
        print(i)
    else:
        break



