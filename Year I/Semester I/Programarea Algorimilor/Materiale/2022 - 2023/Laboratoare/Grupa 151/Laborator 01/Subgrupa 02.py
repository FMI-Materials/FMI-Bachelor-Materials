# -*- coding: utf-8 -*-
"""Lab_PA_1_Sg2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V9i8mDSC1kh-pB7aw067f5VivPXxC4fk
"""

print("Hello World")

a = input()

a

b = input("Pune o valoare: ")

c = int(input("Pune un numar:"))

print(c)

print(type(c))

# This is a comment
# Alt comentariu

"""
Acesta este un comentariu
"""

'''
Alt comentariu
'''

a = 5 + 2

"""Variabile"""

a = 20 # int
b = 'salut' # salut
c = 20.502 # float
d = [1, 2, 3] # list
e = True
print("before", a)
a = 2.5
print("after", a)

print(a, b, c, d, e, "haha string", "bla bla")

print(a, b, c, d, e, "haha string", "bla bla", sep='||', end='.')
print(a)

type("string")

"""Operatii numerice"""

a, c, d = 2, 123, 20.5
print(a + c)
print(a + d)
e = a + d
print(e)
f = 43264732187389123289183218739821837129873892718937218948718723817283721897489128742716378217831782378127832178637126378612783612786378216873262178378216
print(f)

print(a - c)
print(a * c)
a = 7
print(c / a)
print(c // a)
print(c % a)

print(a ** c)
print(3 ** 4)
print(81 ** 0.5)

from math import sqrt, trunc
print(sqrt(4))
print(trunc(5.5))

import math

print(math.sqrt(3))

"""Strings"""

a = 'this is a string'
b = "this is another string"
c = 'this is "my story" by bla bla'
d = "this is 'another story' bla"
print(a, b, c, d, sep='\n')
e = "this is 'a story' by \"author\""
print(e)

mere = 10.3
pere = 4.7
a = f'Ana are {mere} mere si {pere} pere {{working?}}'
print(a)

print(a[1], a[2])
print(a[-1])
print(a[-2])
print(a[4:7])
# a[1] = '5'
b = a[:5] + '5' + a[6:]
print(b)
print(a[:10])
print(a[15:])
print(a[2:7:2])
print(a[-5:-2])

print(a[::-1])

"""Metode pe stringuri

"""

print(a.lower())
print(a.upper())
b = 'salut frate'
print(b.capitalize())
print(a)

print(a.isalpha())

print(a.split())
b = a.split()
print(b)
print(a.split("a"))

"""Liste"""

a = [1 ,2, 3.5, 'salit', [1, 2]]
print(a)

a.append(5)
a.append(7)

print(a)

a[0] = 'Nicu'

a

a.pop()

a.pop(0)

a

b = [3, 5, 6]
a.extend(b)

a

print(a[0])
print(a[1:5])
print(a[::-1])

mat = [[1, 2, 3], [2, 3, 5], [-2, 3, 7]]
print(mat)

print(mat[1][1])

"""Conditionale"""

if 3 < 5:
  print("Mai mic")
elif 3 == 5: 
  print("Egal")
else:
  print("Nu egal")

print(3 < 5)
print(3 == 5)
print(3 > 5)
print(3 <= 5, 3 >= 5)
print(3 != 5)

# c = (3 < 5) ? 'da' : 'nu'
c = 'da' if 3 < 5 else 'nu'
print(c)

print(3 < 5 and 3 < 10)
print(3 > 10 or 3 == 3)
print(not 3 != 3)
a = 5
b = 3
c = 10
if a < b and (b < c or c < a):
  print("haha")

"""For"""

# for (int i = 0; i <= n; i++) {}
a = [1, 2, 3, 4, 5, 6, 7, -2, 3, 10, -20]
n = len(a)
for i in range(n): # start, stop, step
  print(a[i])

for i in range(0, len(a), 2):
  print(a[i])

# for (int i = n - 1; i >= 0; i--)
for i in range(n - 1, -1, -1):
  print(a[i])

for x in a:
  print(x)

a1 = a.copy()
for i, x in enumerate(a1):
  print(i, x)
  a1[i] = 2

print(a1)

"""List comprehension"""

a = [x for x in range(100)]
print(a)

b = [x for x in range(3, 50) if x % 2 == 0]
print(b)

c = [x // 2 for x in range(3, 50)]

c

"""Tupluri"""

a = (1, 2, 3, 45, -2 ,3)

a

a[0] = 2

"""Seturi"""

s = set()
b = []
for i in range(100):
  s.add(i // 10)
  b.append(i // 10)

print(s)
print(b)

if 2 in s:
  print("Este")
else:
  print("NU")

s.remove(2)

s

"""Dictionare"""

d = dict()
# d = {}
a = 'ana are mere'
for i, x in enumerate(a):
  d[i] = x

print(d)

d[0] = 'salut'
print(d)

d['salutr'] = 0

print(d)

del d['salutr']

print(d)

# if 'salutr' in d.keys():
if 'salutr' in d:
  print("este")
else:
  print("nu e")

print(d.keys())
print(d.values())
print(d.items())

for key, val in d.items():
  print(key, val)

"""Functii"""

def func(x):
  print(x)
  return x * 2

func(2)

func('salut')

b = lambda x, y: x + y + 10

b(2, 5)

mat = [[0] * 5] * 5

mat

mat[0][1] = 's'

mat

mat = [[0] * 5 for _ in range(5)]

a = mat.copy()

a[0][2] = 'a'

mat

from copy import deepcopy

a = deepcopy(mat)
a[0][4] = 'sda'
mat

